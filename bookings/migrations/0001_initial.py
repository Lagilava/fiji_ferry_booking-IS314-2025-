# Generated by Django 5.2.4 on 2025-08-25 02:48

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ferry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('operator', models.CharField(blank=True, max_length=100)),
                ('capacity', models.PositiveIntegerField()),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('lat', models.FloatField(help_text='Latitude of port (Fiji: -21 to -16)', validators=[django.core.validators.MinValueValidator(-21.0), django.core.validators.MaxValueValidator(-16.0)])),
                ('lng', models.FloatField(help_text='Longitude of port (Fiji: 176 to 181)', validators=[django.core.validators.MinValueValidator(176.0), django.core.validators.MaxValueValidator(181.0)])),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guest_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('number_of_passengers', models.PositiveIntegerField()),
                ('passenger_adults', models.PositiveIntegerField()),
                ('passenger_children', models.PositiveIntegerField(default=0)),
                ('passenger_infants', models.PositiveIntegerField(default=0)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_intent_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_session_id', models.CharField(blank=True, help_text='Stripe Checkout Session ID', max_length=100, null=True, unique=True)),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('pending', 'Pending'), ('emergency', 'Emergency')], default='pending', max_length=20)),
                ('is_group_booking', models.BooleanField(default=False)),
                ('is_unaccompanied_minor', models.BooleanField(default=False)),
                ('guardian_contact', models.CharField(blank=True, max_length=100)),
                ('consent_form', models.FileField(blank=True, null=True, upload_to='consent_forms/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('responsibility_declaration', models.FileField(blank=True, help_text='Upload a responsibility declaration for non-parent adults traveling with minors.', null=True, upload_to='responsibility_declarations/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('is_emergency', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo_type', models.CharField(max_length=100)),
                ('weight_kg', models.DecimalField(decimal_places=2, max_digits=10)),
                ('dimensions_cm', models.CharField(blank=True, max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='cargo_qrcodes/')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookings.booking')),
            ],
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('age', models.PositiveIntegerField()),
                ('passenger_type', models.CharField(choices=[('adult', 'Adult'), ('child', 'Child'), ('infant', 'Infant')], max_length=20)),
                ('document', models.FileField(blank=True, help_text='Upload a birth certificate or scanned ID (PDF, JPG, or PNG).', null=True, upload_to='passenger_documents/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('verification_status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('missing', 'Missing'), ('temporary', 'Temporary')], default='missing', max_length=20)),
                ('is_group_leader', models.BooleanField(default=False)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passengers', to='bookings.booking')),
                ('linked_adult', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dependents', to='bookings.passenger')),
            ],
            options={
                'verbose_name': 'Passenger',
                'verbose_name_plural': 'Passengers',
            },
        ),
        migrations.CreateModel(
            name='DocumentVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(blank=True, null=True, upload_to='verifications/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('verification_status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('passenger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verifications', to='bookings.passenger')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='group_leader',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_bookings', to='bookings.passenger'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('stripe', 'Stripe'), ('paypal', 'PayPal'), ('local', 'Local')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('session_id', models.CharField(blank=True, help_text='Stripe Checkout Session ID', max_length=100, null=True, unique=True)),
                ('payment_intent_id', models.CharField(blank=True, help_text='Stripe PaymentIntent ID', max_length=255, null=True)),
                ('payment_status', models.CharField(choices=[('completed', 'Completed'), ('failed', 'Failed'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='bookings.booking')),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance_km', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('estimated_duration', models.DurationField(null=True)),
                ('base_fare', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('departure_port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departures', to='bookings.port')),
                ('destination_port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrivals', to='bookings.port')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_time', models.DateTimeField()),
                ('arrival_time', models.DateTimeField()),
                ('available_seats', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('cancelled', 'Cancelled'), ('delayed', 'Delayed')], default='scheduled', max_length=20)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('ferry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookings.ferry')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookings.route')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookings.schedule'),
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('ticket_status', models.CharField(choices=[('active', 'Active'), ('used', 'Used'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('qr_token', models.CharField(blank=True, editable=False, max_length=255, unique=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='bookings.booking')),
                ('passenger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookings.passenger')),
            ],
        ),
        migrations.CreateModel(
            name='WeatherCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField(null=True)),
                ('wind_speed', models.FloatField(null=True)),
                ('wave_height', models.FloatField(null=True)),
                ('condition', models.CharField(max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField()),
                ('port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookings.port')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookings.route')),
            ],
        ),
    ]
